swagger: '2.0'
info:
  description: Documentation for Dikann API
  version: 1.0.0
  title: Dikann API
  contact:
    name: Amir Hossein Shiati
    url: https://github.com/amir-shiati
    email: amirshiati98@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: auth-controller
    description: Auth Controller
  - name: cart-item-controller
    description: Cart Item Controller
  - name: category-controller
    description: Category Controller
  - name: discount-controller
    description: Discount Controller
  - name: order-controller
    description: Order Controller
  - name: product-controller
    description: Product Controller
  - name: user-address-controller
    description: User Address Controller
  - name: user-controller
    description: User Controller
paths:
  /dk/api/v1/auth/login:
    post:
      tags:
        - auth-controller
      summary: signIn
      operationId: signInUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginDto
          description: loginDto
          required: true
          schema:
            $ref: '#/definitions/LoginDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/cart:
    get:
      tags:
        - cart-item-controller
      summary: getAllCartItems
      operationId: getAllCartItemsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - name: valid_session
          in: query
          description: valid_session
          required: false
          type: boolean
          default: true
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CartItemDtoSummeryView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - cart-item-controller
      summary: addCartItem
      operationId: addCartItemUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cartItemDto
          description: cartItemDto
          required: true
          schema:
            $ref: '#/definitions/CartItemDtoReq'
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CartItemDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/cart/{id}:
    get:
      tags:
        - cart-item-controller
      summary: getCartItem
      operationId: getCartItemUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CartItemDtoSummeryView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - cart-item-controller
      summary: updateCartItem
      operationId: updateCartItemUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cartItemDto
          description: cartItemDto
          required: true
          schema:
            $ref: '#/definitions/CartItemDtoReq'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CartItemDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - cart-item-controller
      summary: deleteCartItem
      operationId: deleteCartItemUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dk/api/v1/category:
    get:
      tags:
        - category-controller
      summary: getAllCategories
      operationId: getAllCategoriesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: page_size
          in: query
          description: page_size
          required: false
          type: integer
          default: 10
          format: int32
        - name: sort_by
          in: query
          description: sort_by
          required: false
          type: string
          default: id
          enum:
            - createdDate
            - id
            - modifiedDate
            - name
        - name: sort_dir
          in: query
          description: sort_dir
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CategoryDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - category-controller
      summary: addCategory
      operationId: addCategoryUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: categoryDto
          description: categoryDto
          required: true
          schema:
            $ref: '#/definitions/CategoryDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CategoryDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/category/{id}:
    get:
      tags:
        - category-controller
      summary: getCategory
      operationId: getCategoryUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CategoryDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - category-controller
      summary: updateCategory
      operationId: updateCategoryUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: categoryDto
          description: categoryDto
          required: true
          schema:
            $ref: '#/definitions/CategoryDtoReq'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CategoryDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - category-controller
      summary: deleteCategory
      operationId: deleteCategoryUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dk/api/v1/discount:
    get:
      tags:
        - discount-controller
      summary: getAllDiscounts
      operationId: getAllDiscountsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: page_size
          in: query
          description: page_size
          required: false
          type: integer
          default: 10
          format: int32
        - name: sort_by
          in: query
          description: sort_by
          required: false
          type: string
          default: id
          enum:
            - createdDate
            - id
            - modifiedDate
            - name
        - name: sort_dir
          in: query
          description: sort_dir
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DiscountDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - discount-controller
      summary: addDiscount
      operationId: addDiscountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: discountDto
          description: discountDto
          required: true
          schema:
            $ref: '#/definitions/DiscountDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiscountDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/discount/{id}:
    get:
      tags:
        - discount-controller
      summary: getDiscount
      operationId: getDiscountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiscountDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - discount-controller
      summary: updateDiscount
      operationId: updateDiscountUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: discountDto
          description: discountDto
          required: true
          schema:
            $ref: '#/definitions/DiscountDtoReq'
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DiscountDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - discount-controller
      summary: deleteDiscount
      operationId: deleteDiscountUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: delete_products
          in: query
          description: delete_products
          required: false
          type: boolean
          default: false
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dk/api/v1/order:
    get:
      tags:
        - order-controller
      summary: getAllOrders
      operationId: getAllOrdersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - order-controller
      summary: addOrder
      operationId: addOrderUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - in: body
          name: orderDto
          description: orderDto
          required: true
          schema:
            $ref: '#/definitions/OrderDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/order/{id}:
    get:
      tags:
        - order-controller
      summary: getOrder
      operationId: getOrderUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - order-controller
      summary: updateOrder
      operationId: updateOrderUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
        - name: order_status
          in: query
          description: order_status
          required: true
          type: string
          enum:
            - CANCELED
            - COMPLETED
            - DRAFT
            - PENDING
            - PROCESSING
            - REJECTED
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - order-controller
      summary: deleteOrder
      operationId: deleteOrderUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dk/api/v1/product:
    get:
      tags:
        - product-controller
      summary: getAllProducts
      operationId: getAllProductsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: page_size
          in: query
          description: page_size
          required: false
          type: integer
          default: 10
          format: int32
        - name: sort_by
          in: query
          description: sort_by
          required: false
          type: string
          default: id
          enum:
            - createdDate
            - id
            - modifiedDate
            - name
            - price
            - quantity
            - sku
        - name: sort_dir
          in: query
          description: sort_dir
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductDtoSummeryView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - product-controller
      summary: addProduct
      operationId: addProductUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productDto
          description: productDto
          required: true
          schema:
            $ref: '#/definitions/ProductDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/product/{id}:
    get:
      tags:
        - product-controller
      summary: getProduct
      operationId: getProductUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - product-controller
      summary: updateProduct
      operationId: updateProductUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: productDto
          description: productDto
          required: true
          schema:
            $ref: '#/definitions/ProductDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - product-controller
      summary: deleteProduct
      operationId: deleteProductUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dk/api/v1/user:
    get:
      tags:
        - user-controller
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: page_size
          in: query
          description: page_size
          required: false
          type: integer
          default: 10
          format: int32
        - name: sort_by
          in: query
          description: sort_by
          required: false
          type: string
          default: id
          enum:
            - createdDate
            - firstName
            - id
            - lastName
            - modifiedDate
        - name: sort_dir
          in: query
          description: sort_dir
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SignUpDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: addUser
      operationId: addUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: signUpDto
          description: signUpDto
          required: true
          schema:
            $ref: '#/definitions/SignUpDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SignUpDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/user-address:
    get:
      tags:
        - user-address-controller
      summary: getAllUserAddresses
      operationId: getAllUserAddressesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserAddressDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-address-controller
      summary: addUserAddress
      operationId: addUserAddressUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - in: body
          name: userAddressDto
          description: userAddressDto
          required: true
          schema:
            $ref: '#/definitions/UserAddressDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAddressDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /dk/api/v1/user-address/{id}:
    get:
      tags:
        - user-address-controller
      summary: getUserAddress
      operationId: getUserAddressUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAddressDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-address-controller
      summary: updateUserAddress
      operationId: updateUserAddressUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
        - in: body
          name: userAddressDto
          description: userAddressDto
          required: true
          schema:
            $ref: '#/definitions/UserAddressDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAddressDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-address-controller
      summary: deleteUserAddress
      operationId: deleteUserAddressUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: name
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /dk/api/v1/user/{id}:
    get:
      tags:
        - user-controller
      summary: getUser
      operationId: getUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SignUpDtoRes'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: signUpDto
          description: signUpDto
          required: true
          schema:
            $ref: '#/definitions/SignUpDtoReq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SignUpDtoRes'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  CartItemDto:
    type: object
    required:
      - quantity
    properties:
      created_date:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      modified_date:
        type: string
        format: date-time
      product:
        $ref: '#/definitions/ProductDto'
      quantity:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
    title: CartItemDto
  CartItemDtoReq:
    type: object
    required:
      - product_id
      - quantity
    properties:
      product_id:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
    title: CartItemDtoReq
  CartItemDtoRes:
    type: object
    required:
      - quantity
    properties:
      created_date:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      modified_date:
        type: string
        format: date-time
      product:
        $ref: '#/definitions/ProductDto'
      quantity:
        type: integer
        format: int64
        minimum: 1
        exclusiveMinimum: false
    title: CartItemDtoRes
  CartItemDtoSummeryView:
    type: object
    title: CartItemDtoSummeryView
  CategoryDto:
    type: object
    required:
      - name
    properties:
      created_date:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      image_url:
        type: string
      modified_date:
        type: string
        format: date-time
      name:
        type: string
    title: CategoryDto
  CategoryDtoReq:
    type: object
    required:
      - name
    properties:
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
    title: CategoryDtoReq
  CategoryDtoRes:
    type: object
    required:
      - name
    properties:
      created_date:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      image_url:
        type: string
      modified_date:
        type: string
        format: date-time
      name:
        type: string
    title: CategoryDtoRes
  DiscountDto:
    type: object
    required:
      - active
      - discount_percentage
      - name
    properties:
      active:
        type: boolean
      created_date:
        type: string
        format: date-time
      description:
        type: string
      discount_percentage:
        type: number
        format: double
        minimum: 0
        maximum: 100
        exclusiveMinimum: false
        exclusiveMaximum: false
      id:
        type: integer
        format: int64
      modified_date:
        type: string
        format: date-time
      name:
        type: string
    title: DiscountDto
  DiscountDtoReq:
    type: object
    required:
      - active
      - discount_percentage
      - name
    properties:
      active:
        type: boolean
      description:
        type: string
      discount_percentage:
        type: number
        format: double
        minimum: 0
        maximum: 100
        exclusiveMinimum: false
        exclusiveMaximum: false
      name:
        type: string
    title: DiscountDtoReq
  DiscountDtoRes:
    type: object
    required:
      - active
      - discount_percentage
      - name
    properties:
      active:
        type: boolean
      created_date:
        type: string
        format: date-time
      description:
        type: string
      discount_percentage:
        type: number
        format: double
        minimum: 0
        maximum: 100
        exclusiveMinimum: false
        exclusiveMaximum: false
      id:
        type: integer
        format: int64
      modified_date:
        type: string
        format: date-time
      name:
        type: string
    title: DiscountDtoRes
  LoginDto:
    type: object
    required:
      - password
      - username
    properties:
      password:
        type: string
      username:
        type: string
    title: LoginDto
  OrderDtoReq:
    type: object
    properties:
      status:
        type: string
        enum:
          - CANCELED
          - COMPLETED
          - DRAFT
          - PENDING
          - PROCESSING
          - REJECTED
      user_address_id:
        type: integer
        format: int64
    title: OrderDtoReq
  OrderDtoRes:
    type: object
    properties:
      cart_items:
        type: array
        items:
          $ref: '#/definitions/CartItemDto'
      created_date:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      modified_date:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - CANCELED
          - COMPLETED
          - DRAFT
          - PENDING
          - PROCESSING
          - REJECTED
      total_discount:
        type: number
        format: double
      user_address:
        $ref: '#/definitions/UserAddressDto'
    title: OrderDtoRes
  ProductDto:
    type: object
    required:
      - name
      - price
    properties:
      category:
        $ref: '#/definitions/CategoryDto'
      created_date:
        type: string
        format: date-time
      description:
        type: string
      discount:
        $ref: '#/definitions/DiscountDto'
      id:
        type: integer
        format: int64
      image_url:
        type: string
      modified_date:
        type: string
        format: date-time
      name:
        type: string
      price:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: false
      quantity:
        type: integer
        format: int64
        minimum: 0
        exclusiveMinimum: false
      sku:
        type: string
    title: ProductDto
  ProductDtoReq:
    type: object
    required:
      - category_id
      - name
      - price
    properties:
      category_id:
        type: integer
        format: int64
      description:
        type: string
      discount_id:
        type: integer
        format: int64
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: false
      quantity:
        type: integer
        format: int64
        minimum: 0
        exclusiveMinimum: false
      sku:
        type: string
    title: ProductDtoReq
  ProductDtoRes:
    type: object
    required:
      - name
      - price
    properties:
      category:
        $ref: '#/definitions/CategoryDto'
      created_date:
        type: string
        format: date-time
      description:
        type: string
      discount:
        $ref: '#/definitions/DiscountDto'
      id:
        type: integer
        format: int64
      image_url:
        type: string
      modified_date:
        type: string
        format: date-time
      name:
        type: string
      price:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: false
      quantity:
        type: integer
        format: int64
        minimum: 0
        exclusiveMinimum: false
      sku:
        type: string
    title: ProductDtoRes
  ProductDtoSummeryView:
    type: object
    title: ProductDtoSummeryView
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  SignUpDtoReq:
    type: object
    required:
      - email
      - password
      - username
    properties:
      email:
        type: string
      family_name:
        type: string
      first_name:
        type: string
      password:
        type: string
      roles:
        type: array
        items:
          type: string
      username:
        type: string
    title: SignUpDtoReq
  SignUpDtoRes:
    type: object
    required:
      - email
      - username
    properties:
      created_date:
        type: string
        format: date-time
      email:
        type: string
      family_name:
        type: string
      first_name:
        type: string
      id:
        type: integer
        format: int64
      modified_date:
        type: string
        format: date-time
      roles:
        type: array
        items:
          type: string
      username:
        type: string
    title: SignUpDtoRes
  UserAddressDto:
    type: object
    properties:
      address_line_one:
        type: string
      address_line_two:
        type: string
      city:
        type: string
      country:
        type: string
      id:
        type: integer
        format: int64
      phone:
        type: string
      postal_code:
        type: string
    title: UserAddressDto
  UserAddressDtoReq:
    type: object
    properties:
      address_line_one:
        type: string
      address_line_two:
        type: string
      city:
        type: string
      country:
        type: string
      phone:
        type: string
      postal_code:
        type: string
    title: UserAddressDtoReq
  UserAddressDtoRes:
    type: object
    properties:
      address_line_one:
        type: string
      address_line_two:
        type: string
      city:
        type: string
      country:
        type: string
      id:
        type: integer
        format: int64
      phone:
        type: string
      postal_code:
        type: string
    title: UserAddressDtoRes
